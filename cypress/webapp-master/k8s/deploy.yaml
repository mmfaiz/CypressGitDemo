apiVersion: v1
kind: ServiceAccount
metadata:
  name: webapp-jgroups-kubeping-service-account
imagePullSecrets:
  - name: awsecr-cred # needed for local deployment
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: webapp-jgroups-kubeping-pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: webapp-jgroups-kubeping-api-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: webapp-jgroups-kubeping-pod-reader
subjects:
  - kind: ServiceAccount
    name: webapp-jgroups-kubeping-service-account
    namespace: webapp

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  annotations:
    kubernetes.io/change-cause: "${TIMESTAMP} Deployed commit id: ${COMMIT}"
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 30%
  minReadySeconds: 5
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      serviceAccountName: webapp-jgroups-kubeping-service-account
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - webapp
                topologyKey: kubernetes.io/hostname
      containers:
        - name: webapp
          image: 159364473423.dkr.ecr.eu-west-1.amazonaws.com/webapp:${COMMIT}
          imagePullPolicy: 'IfNotPresent'
          lifecycle:
            preStop:
              httpGet:
                path: /preStop
                port: webapp
          resources:
            requests:
              memory: 29Gi
              cpu: 6000m
            limits:
              memory: 29Gi
          ports:
            - name: webapp
              containerPort: 8080
              protocol: TCP
            - name: health
              containerPort: 18080
              protocol: TCP
            - name: metrics
              containerPort: 10000
              protocol: TCP
            - name: jgroups
              containerPort: 7800
              protocol: TCP
            - name: undertow
              containerPort: 8888
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readiness
              port: health
            timeoutSeconds: 10
            failureThreshold: 1
            initialDelaySeconds: 45
          livenessProbe:
            httpGet:
              path: /liveness
              port: health
            initialDelaySeconds: 120
            periodSeconds: 30
            failureThreshold: 2
            timeoutSeconds: 10
          envFrom:
            - configMapRef:
                name: webapp-configuration
                optional: false
            - secretRef:
                name: webapp-secrets
                optional: false
          volumeMounts:
            - name: logging-config
              mountPath: /usr/local/tomcat/deploy/matchi/WEB-INF/classes/logging-config.groovy
              subPath: logging-config.groovy
            - name: ehcache
              mountPath: /usr/local/tomcat/deploy/matchi/WEB-INF/classes/ehcache.xml
              subPath: ehcache.xml
      volumes:
        - name: logging-config
          configMap:
            name: webapp-logging-config
        - name: ehcache
          configMap:
            name: webapp-ehcache-config


---
apiVersion: v1
kind: Service
metadata:
  name: webapp
  labels:
    app: webapp
spec:
  ports:
   - name: http
     port: 80
     targetPort: webapp
     protocol: TCP
   - name: metrics
     port: 81
     targetPort: metrics
     protocol: TCP
  selector:
   app: webapp

---
